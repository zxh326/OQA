<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.MessageDao">
    <resultMap id="getMessageRes" type="model.po.Group">
        <id column="groupId" property="groupId" jdbcType="INTEGER" />
        <result column="groupName" property="groupName" jdbcType="VARCHAR" />
        <result column="createTime" property="createTime" jdbcType="DATE" javaType="java.util.Date"/>

        <collection property="groupMessages" javaType="java.util.List" ofType="model.po.GroupMesage">
            <result column="id" property="id" jdbcType="INTEGER"/>
            <result column="fromId" property="fromId" jdbcType="INTEGER"/>
            <result column="fromavatarUrl" property="fromavatarUrl" jdbcType="VARCHAR"/>
            <result column="content" property="content" jdbcType="VARCHAR"/>

        </collection>

    </resultMap>

    <select id="getGroupMessages" resultMap="getMessageRes" parameterType="Integer">
        select g.groupId,g.groupName, g.createTime, gm.id,u.userId as fromId,u.avatarUrl as fromavatarUrl,gm.content
        from gmessage gm
        left join ogroup g on gm.groupId=g.groupId
        left join user u on gm.fromId = u.userId
        where gm.groupId = #{groupId} order by id;
    </select>

</mapper>


